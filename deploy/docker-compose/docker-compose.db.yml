version: '3.5'

services:
  frontend:
    container_name: ${FRONTEND_SERVICE}
    build:
      context: ../../src/frontend 
      dockerfile: Dockerfile
    environment:
     - FRONTEND_PORT=${FRONTEND_PORT}
    ports:
     - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
     - album-static-gen:/srv
    restart: on-failure

  photo-upload-server:
    container_name: ${PHOTO_UPLOAD_SERVER_SERVICE}
    build:
      context: ../../src/storage/photo-upload-server
      dockerfile: Dockerfile
      args:
        - PHOTO_UPLOAD_SERVER_PORT:${PHOTO_UPLOAD_SERVER_PORT}
    volumes:
      - album-uploads:/srv/album-uploads
    ports:
      - ${PHOTO_UPLOAD_SERVER_PORT}:${PHOTO_UPLOAD_SERVER_PORT}
    restart: on-failure

  caddy-server:
    container_name: ${CADDY_SERVER_SERVICE}
    build:
      context: ../../src/storage/caddy-server
      dockerfile: Dockerfile
    volumes:
      - album-uploads:/srv/album-uploads
    ports:
      - ${CADDY_SERVER_PORT}:${CADDY_SERVER_PORT}
    restart: on-failure

  static-generator:
    container_name: ${STATIC_GENERATOR_SERVICE}
    build:
      context: ../../src/storage/static-generator
      dockerfile: Dockerfile
      args:
        - STATIC_GENETATOR_PORT:${STATIC_GENERATOR_PORT}
    ports:
      - ${STATIC_GENERATOR_PORT}:${STATIC_GENERATOR_PORT}
    volumes:
      - album-uploads:/srv/album-uploads
      - album-static-gen:/srv/album-static-gen
    restart: on-failure

  servicex:
    container_name: ${SERVICE_X_SERVICE}
    build:
      context: ../../src/serviceX 
      dockerfile: Dockerfile
    restart: on-failure

  postgres-db:
    container_name: postgres-db
    build:
      context: ../../src/database/postgres-db
      dockerfile: Dockerfile

  postgres-api:
    container_name: postgres-api
    build:
      context: ../../src/database/postgres-api
      dockerfile: Dockerfile
    restart: on-failure

  pgadmin4:
    container_name: pgadmin4
    image: "thajeztah/pgadmin4"
    ports:
      - "5050:5050"
  
  faceapi:
    container_name: faceapi
    build:
      context: ../../src/faceapi
      dockerfile: Dockerfile
    volumes:
      - album-uploads:/usr/src/app/album-uploads
      - album-faces:/usr/src/app/album-faces
    restart: on-failure

  imgproxyservice:
    container_name: imgproxyservice
    build:
      context: ../../src/imgproxyservice
      dockerfile: Dockerfile
    volumes:
      - album-uploads:/usr/src/app/album-upload
      - album-resized:/usr/src/app/resized
      - album-faces:/usr/src/app/faces
    restart: on-failure

  imgproxy:
    container_name: imgproxy
    image: "darthsim/imgproxy:latest"
    ports:
      - 8080:8080
    restart: on-failure

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

volumes:
  album-uploads:
  album-static-gen:
  album-faces:
  album-resized: