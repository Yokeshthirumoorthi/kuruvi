version: '3.5'

services:

  imguploadservice:
    container_name: imguploadservice
    build:
      context: ../../src/imguploadservice
      dockerfile: Dockerfile
    volumes:
      - albums:/usr/src/app/uploads
    ports:
      - '8000:8000'
    networks:
      - nest

# TODO: merge this service with photoviewer service
  frontend:
    container_name: frontend
    build:
      context: ../../src/frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    networks:
      - nest

  postgresql:
    container_name: postgresserver
    image: "postgres:9"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - nest

  pgadmin4:
    container_name: pgadmin4
    image: "thajeztah/pgadmin4"
    ports:
      - "5050:5050"
    networks:
      - nest

  # exifservice:
  #   container_name: exifservice
  #   build:
  #     context: ../../src/exifservice
  #     dockerfile: Dockerfile
  #   volumes:
  #     - albums:/usr/src/app/uploads
  #   ports:
  #     - "50052:50052"
  #   networks:
  #     - nest
  #   restart: on-failure

  pgsqlservice:
    container_name: pgsqlservice
    build:
      context: ../../src/pgsqlservice
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - nest
    restart: on-failure

  faceapi:
    container_name: faceapi
    build:
      context: ../../src/faceapi
      dockerfile: Dockerfile
    volumes:
      - albums:/usr/src/app/uploads
      - faces:/usr/src/app/faces
    ports:
      - "50054:50054"
    networks:
      - nest
    restart: on-failure

  imgproxyservice:
    container_name: imgproxyservice
    build:
      context: ../../src/imgproxyservice
      dockerfile: Dockerfile
    volumes:
      - albums:/usr/src/app/uploads
      - resized_albums:/usr/src/app/resized
      - faces:/usr/src/app/faces
    ports:
      - "50053:50053"
    networks:
      - nest
    restart: on-failure

  imgproxy:
    container_name: imgproxy
    image: "darthsim/imgproxy:latest"
    volumes:
      - albums:/usr/src/app/uploads
    ports:
      - '8080:8080'
    networks:
      - nest
    restart: on-failure

# # TODO: Delete this service. and use only photoviewer service  
  caddy-fs:
    container_name: "${CADDY_SERVICE}"
    build:
      context: ../../src/volumeservice
      dockerfile: Dockerfile
    # image: "abiosoft/caddy"
    volumes:
      - albums:/srv
      - resized_albums:/srv/resized
      - faces:/srv/faces
    ports:
      - '${CADDY_SERVICE_PORT}:${CADDY_SERVICE_PORT}'
    networks:
      - nest
    restart: on-failure

  photoviewer:
    container_name: photoviewer
    build:
      context: ../../src/photoviewer
      dockerfile: Dockerfile
    volumes:
      - albums:/usr/src/app/PhotoFloat/web/albums
      - cache:/usr/src/app/PhotoFloat/web/cache
    ports:
      - '2020:2020'
    networks:
      - nest
    restart: on-failure

# TODO: have only albums and make 
# resized and faces folders as its children    
volumes:
  albums:
  resized_albums:
  faces:
  cache:
  pgdata:

networks:
  nest:




