/***********************************************************

		To generate architecture diagram, run the below
		command from the root of the project

		$ dot -Tpng docs/architecture-diagram.dot -o docs/img/architecture-diagram.png

************************************************************/

digraph finite_state_machine {
  rankdir=LR;
	size="8,4";
	// square brackets hold attributes
	node [fontname=Arial fixedsize=false shape=polygon sides=4]
	edge [arrowhead=normal dir=both color="#aaaaaa"]

  ws[ label="Web \nServer" ]
	db_adapter[ label="DB Adapter \nService"]
  exif[ label="Exif \nService"]
	img_resize[ label="Image \nService"]
	face_api[ label="Face Api \nService"]
	fs_manager[ label="FS Manager \nService"]
	fs[ label="File \nSystem" shape="square"]
  db[ label="PGSQL" shape="square"]
	frontend[ shape="box"]

	/*****************************
	 Do the image meta processing as
	 soon the image is uploaded
	*****************************/
	frontend -> ws -> {exif, img_resize}

	/*****************************
		And these services are expected to run async
	*****************************/
	{rank=L1; exif, img_resize}
	{rank=L2; db_adapter, fs_manager}

	/*****************************
		All the services are connected
		to db and file system
	*****************************/
	{ws, exif, face_api, img_resize}
		-> db_adapter	-> db

	{ws, exif, face_api, img_resize}
		-> fs_manager -> fs

	img_resize -> face_api
}
