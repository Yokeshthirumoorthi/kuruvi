version: '3.5'

services:
################################################################################
# Frontend
################################################################################
  caddy-frontend:
    container_name: ${CADDY_FRONTEND_SERVICE}
    build:
      context: ../../src/caddy-frontend 
      dockerfile: Dockerfile
    environment:
     - CADDY_FRONTEND_PORT=${CADDY_FRONTEND_PORT}
    ports:
     - ${CADDY_FRONTEND_PORT}:${CADDY_FRONTEND_PORT}
    volumes:
     - static-site:/srv 
    restart: on-failure

  frontend:
    container_name: ${FRONTEND_SERVICE}
    build:
      context: ../../src/frontend 
      dockerfile: Dockerfile
      args:
        FRONTEND_PORT: ${FRONTEND_PORT}
    environment:
     - FRONTEND_PORT=${FRONTEND_PORT}
    ports:
     - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
     - static-site:/srv/public
     - galleries:/srv/content/galleries
     - album-faces:/srv/content/faces
     - album-resized:/srv/static/pics
    restart: on-failure

################################################################################
# Storage
################################################################################    
  photo-upload-server:
      container_name: ${PHOTO_UPLOAD_SERVER_SERVICE}
      build:
        context: ../../src/storage/photo-upload-server
        dockerfile: Dockerfile
        args:
          PHOTO_UPLOAD_SERVER_PORT: ${PHOTO_UPLOAD_SERVER_PORT}
      volumes:
        - album-uploads:/srv/album-uploads
      restart: always

  caddy-server:
      container_name: ${CADDY_SERVER_SERVICE}
      build:
        context: ../../src/storage/caddy-server
        dockerfile: Dockerfile
        args:
          CADDY_SERVER_PORT: ${CADDY_SERVER_PORT}
          PHOTO_UPLOAD_SERVER_SERVICE: ${PHOTO_UPLOAD_SERVER_SERVICE}
          PHOTO_UPLOAD_SERVER_PORT: ${PHOTO_UPLOAD_SERVER_PORT}
      volumes:
        - album-uploads:/srv/album-uploads
        - album-faces:/srv/album-faces
        - album-resized:/srv/album-resized
        - galleries:/srv/galleries     
      ports:
        - ${CADDY_SERVER_PORT}:${CADDY_SERVER_PORT}
        - ${PHOTO_UPLOAD_SERVER_PORT}:${PHOTO_UPLOAD_SERVER_PORT}
      restart: on-failure

################################################################################
# Workflow
################################################################################    
  workflow:
    container_name: ${WORKFLOW_SERVICE}
    build:
      context: ../../src/workflow 
      dockerfile: Dockerfile
      args:
        WORKFLOW_PORT: ${WORKFLOW_PORT}      
    volumes:
      - album-uploads:/srv/album-uploads
      - album-faces:/srv/album-faces
      - album-resized:/srv/album-resized
      - galleries:/srv/galleries     
    restart: on-failure

  queue:
    container_name: ${QUEUE_SERVICE}
    build:
      context: ../../src/queue
      dockerfile: Dockerfile
      args:
        QUEUE_PORT: ${QUEUE_PORT}  
    # TODO : Not to expose this port    
    ports:
        - ${QUEUE_PORT}:${QUEUE_PORT}        
    restart: on-failure

################################################################################
# Cores
################################################################################
  exif-core:
    container_name: ${EXIF_CORE_SERVICE}
    build:
      context: ../../src/exif/exif-core
      dockerfile: Dockerfile
      args:
        EXIF_CORE_PORT: ${EXIF_CORE_PORT}
    # TODO : Not to expose this port
    ports:
        - ${EXIF_CORE_PORT}:${EXIF_CORE_PORT}
    restart: on-failure

  resize-core:
    container_name: ${RESIZE_CORE_SERVICE}
    build:
      context: ../../src/resize/resize-core
      dockerfile: Dockerfile
      args:
        RESIZE_CORE_PORT: ${RESIZE_CORE_PORT}
    # TODO : Not to expose this port    
    ports:
        - ${RESIZE_CORE_PORT}:${RESIZE_CORE_PORT}        
    restart: on-failure

  face-detect:
    container_name: ${FACE_DETECT_SERVICE}
    build:
      context: ../../src/faces/face-detect
      dockerfile: Dockerfile
      args:
        FACE_DETECT_PORT: ${FACE_DETECT_PORT}
    # TODO : Not to expose this port    
    ports:
        - ${FACE_DETECT_PORT}:${FACE_DETECT_PORT}   
    volumes:
      - album-uploads:/srv/album-uploads
      - album-resized:/srv/album-resized
    restart: on-failure

  face-describe:
    container_name: ${FACE_DESCRIBE_SERVICE}
    build:
      context: ../../src/faces/face-describe
      dockerfile: Dockerfile
      args:
        FACE_DESCRIBE_PORT: ${FACE_DESCRIBE_PORT}
    # TODO : Not to expose this port    
    ports:
        - ${FACE_DESCRIBE_PORT}:${FACE_DESCRIBE_PORT}
    volumes:
      - album-faces:/srv/album-faces
    restart: on-failure

volumes:
  album-uploads:
  static-site:
  album-faces:
  album-resized:
  galleries: