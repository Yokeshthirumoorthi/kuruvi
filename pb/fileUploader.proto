/*
 *
 * Copyright Â© 2019 Yokesh Thirumoorthi.
 *
 * [This program is licensed under the "MIT License"]
 * Please see the file LICENSE in the source
 * distribution of this software for license terms.
 *
 */

syntax = "proto3";

package kuruvi;

// -----------------Photo Upload service-----------------

service PhotoUploadService {
    rpc AddPhoto(AddPhotoRequest) returns (AddPhotoResponse) {}
    rpc GetPhotoFullPath(ExifRequest) returns (PathResponse) {}
    rpc GetBoundingBoxes(BoundingBoxesRequest) returns (BoundingBoxesResponse) {}
    rpc InsertExif(InsertExifRequest) returns (Empty) {}
    rpc InsertBoundingBoxes(InsertBoundingBoxesRequest) returns (Empty) {}
    rpc GetAlbumPhotoPath(AlbumPhotoPathRequest) returns (AlbumPhotoPathResponse) {}
    rpc SaveBoundingBoxes(PhotoDetails) returns (BoundingBoxesId) {}
    rpc GetPhotoDetails(PhotoDetailsRequest) returns (PhotoDetails) {}
}

message PhotoDetailsRequest {
    int32 photoId= 1;
}

message Photo {
    string albumId= 1;
    string name= 2;
}

message Album {
    string name= 1;
    string path= 2;
}

message Exif {
    string make= 1;
    string model= 2;
    int32 create_on= 3;
    int32 img_width= 4;
    int32 img_height= 5;
}

message BoundingBoxes {
    int32 x= 1;
    int32 y= 2;
    int32 width= 3;
    int32 height= 4;
}

message BoundingBoxesId {
    repeated int32 id= 1;
}

message Faces {
    string name= 1;
    string path= 2;
}

message PhotoDetails {
    Album album= 1;
    Photo photo= 2;
    Exif exif= 3;
    repeated BoundingBoxes boundingBoxes= 4;
    repeated Faces faces= 5;
}

message AddPhotoRequest {
    string album= 1;
    string path= 2;
    string filename= 3;
}

message AddPhotoResponse {
    int32 photo_id= 1;
}

message ExifRequest {
    int32 photo_id= 1;
}

message BoundingBoxesRequest {
    int32 photo_id= 1;
}

message BoundingBoxesResponse {
    int32 photo_id= 1; 
    string path= 2;
    repeated BoundingBoxes bounding_boxes= 3;
}

message InsertBoundingBoxesRequest {
    int32 photo_id= 1; 
    repeated BoundingBoxes bounding_boxes= 2;
}

message AlbumPhotoPathRequest {
    int32 photo_id= 1;
}

message AlbumPhotoPathResponse {
    string album= 1;
    string photo= 2;
}

message ImgProxyRequest {
    int32 photo_id= 1;
}

message InsertExifRequest {
    int32 photo_id= 1;
    Exif exif=2;
}

message PathResponse {
    string imagePath= 1;
}

message DetectFaceRequest {
    int32 photo_id= 1;
}
message Empty {}

// -----------------Exif service-----------------

service ExifService {
    rpc ExtractExif(ExifRequest) returns (Empty) {}
}

// -----------------Imgproxy service-----------------

service ImgProxyService {
    rpc ResizeImage(ImgProxyRequest) returns (Empty) {}
    rpc CropFaces(ImgProxyRequest) returns (Empty) {}
}

// -----------------Faceapi service-----------------

service FaceApiService {
    rpc DetectFaces(DetectFaceRequest) returns (Empty) {}
}
