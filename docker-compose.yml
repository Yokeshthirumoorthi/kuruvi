version: '3.5'

services:

  express:
    container_name: web-server
    build:
      context: ./express
      dockerfile: Dockerfile
    volumes:
      - albums:/usr/src/app/uploads
    ports:
      - '8000:8000'
    networks:
      - frontend

  react-web:
    container_name: react-web
    build:
      context: ./react-web
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    networks:
      - frontend

  database-api:
    container_name: rust-postgres
    build:
      context: ./rust-postgres
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - frontend

  postgresql:
    container_name: postgres-db
    image: "postgres:9"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - frontend

  pgadmin4:
    container_name: pgadmin4
    image: "thajeztah/pgadmin4"
    ports:
      - "5050:5050"
    networks:
      - frontend

  rabbitmq:
    container_name: rabbit
    image: "rabbitmq:3.7-management"
    networks:
      - frontend
    ports:
      # - '4369:4369'
      - '5672:5672'
      # - '25672:25672'
      - '15672:15672'
    volumes:
      - 'rabbitmq_data:/var/lib/rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=some_password

volumes:
  albums:
  pgdata:
  rabbitmq_data:
    driver: local

networks:
  frontend:
